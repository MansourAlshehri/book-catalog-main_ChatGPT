#!/usr/bin/env python3
"""
IDGen_MS (internal) - Server_1
Port: 5002
Usage: python idgen_ms.py
"""
from flask import Flask, request, Response
import yaml, requests, time, uuid

app = Flask("IDGen_MS")

STORAGE_URL = "http://localhost:5003"  # Storage_MS

def yaml_response(obj, status=200):
    return Response(yaml.safe_dump(obj), status=status, mimetype="application/x-yaml")

@app.route("/generate_id", methods=["POST"])
def generate_id():
    """
    Controller asks for parcel id.
    Returns YAML: {parcel_id: "..."}
    Also sends parcel id to Storage_MS (/store_id) and waits ack.
    """
    try:
        req = yaml.safe_load(request.data.decode() or "{}")
    except Exception:
        return yaml_response({"error": "invalid yaml"}, status=400)

    parcel_id = "P-" + uuid.uuid4().hex[:12].upper()
    payload = {"parcel_id": parcel_id, "meta": req.get("meta", {})}
    # Share parcel ID with Storage_MS
    try:
        r = requests.post(f"{STORAGE_URL}/store_id", data=yaml.safe_dump(payload),
                          headers={"Content-Type":"application/x-yaml"}, timeout=5)
        if r.status_code != 200:
            return yaml_response({"error": "storage failed", "storage_resp": r.text}, status=500)
    except Exception as e:
        return yaml_response({"error": "failed contacting Storage_MS", "exception": str(e)}, status=500)

    # acknowledge Controller with parcel id
    return yaml_response({"parcel_id": parcel_id, "generated_at": time.time()})

if __name__ == "__main__":
    print("Starting IDGen_MS on port 5002")
    app.run(host="0.0.0.0", port=5002)

